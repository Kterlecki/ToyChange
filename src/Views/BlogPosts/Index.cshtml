@model IEnumerable<ToyChange.Models.BlogPost>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Blog Posts</h1>

<p>
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-action="Create">Create New</a>
    }
</p>

<dl class="row">
    @foreach (var item in Model)
    {
        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BlogTitle)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(modelItem => item.BlogTitle)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BlogContent)</dt>
        <dd class="col-sm-9">
            <p>@Html.DisplayFor(modelItem => item.BlogContent)</p>
        </dd>
        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BlogImageUrl)</dt>
        <dd class="col-sm-9">
            <img class="img-fluid rounded mx-auto d-block" src="@item.BlogImageUrl" alt="Error">
        </dd>



        @if (SignInManager.IsSignedIn(User))
        {
            <dt class="col-sm-3">
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.BlogId">Edit</a>
                <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.BlogId">Details</a>
                <a class="btn btn-primary" asp-action="Delete" asp-route-id="@item.BlogId">Delete</a>
            </dt>
        }
        
        <div class="container">
            <p>-------------------------------------------------------------</p>
        </div>


    }



</dl>